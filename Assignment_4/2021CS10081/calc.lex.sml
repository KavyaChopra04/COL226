functor CalcLexFun(structure Tokens: Calc_TOKENS)  = struct

    structure yyInput : sig

        type stream
	val mkStream : (int -> string) -> stream
	val fromStream : TextIO.StreamIO.instream -> stream
	val getc : stream -> (Char.char * stream) option
	val getpos : stream -> int
	val getlineNo : stream -> int
	val subtract : stream * stream -> string
	val eof : stream -> bool
	val lastWasNL : stream -> bool

      end = struct

        structure TIO = TextIO
        structure TSIO = TIO.StreamIO
	structure TPIO = TextPrimIO

        datatype stream = Stream of {
            strm : TSIO.instream,
	    id : int,  (* track which streams originated 
			* from the same stream *)
	    pos : int,
	    lineNo : int,
	    lastWasNL : bool
          }

	local
	  val next = ref 0
	in
	fun nextId() = !next before (next := !next + 1)
	end

	val initPos = 2 (* ml-lex bug compatibility *)

	fun mkStream inputN = let
              val strm = TSIO.mkInstream 
			   (TPIO.RD {
			        name = "lexgen",
				chunkSize = 4096,
				readVec = SOME inputN,
				readArr = NONE,
				readVecNB = NONE,
				readArrNB = NONE,
				block = NONE,
				canInput = NONE,
				avail = (fn () => NONE),
				getPos = NONE,
				setPos = NONE,
				endPos = NONE,
				verifyPos = NONE,
				close = (fn () => ()),
				ioDesc = NONE
			      }, "")
	      in 
		Stream {strm = strm, id = nextId(), pos = initPos, lineNo = 1,
			lastWasNL = true}
	      end

	fun fromStream strm = Stream {
		strm = strm, id = nextId(), pos = initPos, lineNo = 1, lastWasNL = true
	      }

	fun getc (Stream {strm, pos, id, lineNo, ...}) = (case TSIO.input1 strm
              of NONE => NONE
	       | SOME (c, strm') => 
		   SOME (c, Stream {
			        strm = strm', 
				pos = pos+1, 
				id = id,
				lineNo = lineNo + 
					 (if c = #"\n" then 1 else 0),
				lastWasNL = (c = #"\n")
			      })
	     (* end case*))

	fun getpos (Stream {pos, ...}) = pos

	fun getlineNo (Stream {lineNo, ...}) = lineNo

	fun subtract (new, old) = let
	      val Stream {strm = strm, pos = oldPos, id = oldId, ...} = old
	      val Stream {pos = newPos, id = newId, ...} = new
              val (diff, _) = if newId = oldId andalso newPos >= oldPos
			      then TSIO.inputN (strm, newPos - oldPos)
			      else raise Fail 
				"BUG: yyInput: attempted to subtract incompatible streams"
	      in 
		diff 
	      end

	fun eof s = not (isSome (getc s))

	fun lastWasNL (Stream {lastWasNL, ...}) = lastWasNL

      end

    datatype yystart_state = 
INITIAL
    structure UserDeclarations = 
      struct

structure Tokens = Tokens
type pos = int
type svalue = Tokens.svalue
type ('a,'b) token = ('a,'b) Tokens.token
type lexresult= (svalue,pos) token
val pos = ref 0
fun eof () = Tokens.EOF(!pos,!pos)


      end

    datatype yymatch 
      = yyNO_MATCH
      | yyMATCH of yyInput.stream * action * yymatch
    withtype action = yyInput.stream * yymatch -> UserDeclarations.lexresult

    local

    val yytable = 
#[([(#"\t",#"\t",1),
(#" ",#" ",1),
(#"\n",#"\n",2),
(#"!",#"!",3),
(#"%",#"%",4),
(#"&",#"&",5),
(#"(",#"(",6),
(#")",#")",7),
(#"*",#"*",8),
(#"+",#"+",9),
(#",",#",",10),
(#"-",#"-",11),
(#".",#".",12),
(#"/",#"/",13),
(#"0",#"9",14),
(#":",#":",15),
(#";",#";",16),
(#"<",#"<",17),
(#"=",#"=",18),
(#">",#">",19),
(#"A",#"Z",20),
(#"a",#"a",20),
(#"g",#"h",20),
(#"j",#"l",20),
(#"n",#"n",20),
(#"q",#"q",20),
(#"u",#"u",20),
(#"x",#"z",20),
(#"b",#"b",21),
(#"c",#"c",22),
(#"d",#"d",23),
(#"e",#"e",24),
(#"f",#"f",25),
(#"i",#"i",26),
(#"m",#"m",27),
(#"o",#"o",28),
(#"p",#"p",29),
(#"r",#"r",30),
(#"s",#"s",31),
(#"t",#"t",32),
(#"v",#"v",33),
(#"w",#"w",34),
(#"{",#"{",35),
(#"|",#"|",36),
(#"}",#"}",37),
(#"~",#"~",38)], []), ([(#"\t",#"\t",1),
(#" ",#" ",1)], [1]), ([], [0]), ([], [28]), ([], [43]), ([(#"&",#"&",157)], []), ([(#"*",#"*",156)], [51]), ([], [52]), ([(#")",#")",155)], [41]), ([], [39]), ([], [56]), ([], [40]), ([(#"(",#"(",144),
(#"*",#"*",147),
(#"+",#"+",148),
(#"-",#"-",149),
(#"/",#"/",150),
(#"0",#"9",143)], []), ([], [42]), ([(#".",#".",143),
(#"0",#"9",14)], [3]), ([(#"=",#"=",142)], []), ([], [55]), ([(#"=",#"=",140),
(#">",#">",141)], [44]), ([], [48]), ([(#"=",#"=",139)], [46]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",133),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",130),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",129),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",126),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"e",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"f",#"f",114),
(#"i",#"i",115),
(#"r",#"r",116),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"e",20),
(#"j",#"k",20),
(#"m",#"m",20),
(#"o",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"f",#"f",102),
(#"n",#"n",103),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",95),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"d",#"d",94),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"r",#"r",83),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",73),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",74),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"g",40),
(#"i",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"h",#"h",60),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"g",40),
(#"i",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"h",#"h",48),
(#"o",#"o",49),
(#"t",#"t",50),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",46),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"g",40),
(#"i",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"h",#"h",41),
(#"|",#"|",42)], [31]), ([], [53]), ([(#"|",#"|",39)], []), ([], [54]), ([], [38]), ([], [30]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",43),
(#"|",#"|",42)], [31]), ([(#"a",#"a",42),
(#"d",#"d",42),
(#"g",#"i",42),
(#"l",#"l",42),
(#"p",#"p",42),
(#"t",#"t",42),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",44),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",45),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [14, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"r",#"r",47),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [9, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",58),
(#"|",#"|",42)], [31]), ([(#"A",#"C",20),
(#"E",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"D",#"D",51),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [7, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",52),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"b",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"c",#"c",53),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",54),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"n",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"m",#"m",55),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",56),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",57),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [27, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"m",20),
(#"o",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"n",#"n",59),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [11, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",61),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"v",20),
(#"x",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"w",#"w",62),
(#"|",#"|",42)], [31]), ([(#"A",#"C",20),
(#"E",#"Q",20),
(#"S",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"D",#"D",63),
(#"R",#"R",64),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",67),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",65),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",66),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [24, 31]), ([(#"A",#"Z",20),
(#"b",#"b",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"c",#"c",68),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",69),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"n",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"m",#"m",70),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",71),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",72),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [25, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",77),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",75),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"d",#"d",76),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [19, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",78),
(#"|",#"|",42)], [23, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",79),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"m",20),
(#"o",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"n",#"n",80),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",81),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",82),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [4, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",84),
(#"o",#"o",85),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"m",20),
(#"o",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"n",#"n",92),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"b",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"c",#"c",86),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",87),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"d",#"d",88),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"v",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"u",#"u",89),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"r",#"r",90),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",91),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [17, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",93),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [18, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [16, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"j",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"k",#"k",96),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",97),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"_",#"_",98),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"r",#"r",99)], []), ([(#"a",#"a",100)], []), ([(#"t",#"t",101)], []), ([], [22]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [10, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"u",20),
(#"w",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",104),
(#"v",#"v",105),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",110),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",106),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"r",#"r",107),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"r",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"s",#"s",108),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",109),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [21, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"h",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"g",#"g",111),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",112),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"q",20),
(#"s",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"r",#"r",113),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [5, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [8, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [13, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",117),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"n",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"m",#"m",118),
(#"|",#"|",42)], [31]), ([(#"A",#"C",20),
(#"E",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"D",#"D",119),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",120),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"b",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"c",#"c",121),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"h",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"i",#"i",122),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"n",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"m",#"m",123),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",124),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",125),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [26, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"r",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"s",#"s",127),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",128),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [12, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [15, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",131),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",132),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [20, 31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"n",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"o",#"o",134),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"l",#"l",135),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"f",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"e",#"e",136),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",137),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"m",20),
(#"o",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"n",#"n",138),
(#"|",#"|",42)], [31]), ([(#"A",#"Z",20),
(#"b",#"c",20),
(#"e",#"f",20),
(#"j",#"k",20),
(#"m",#"o",20),
(#"q",#"s",20),
(#"u",#"z",20),
(#"a",#"a",40),
(#"d",#"d",40),
(#"g",#"i",40),
(#"l",#"l",40),
(#"p",#"p",40),
(#"t",#"t",40),
(#"|",#"|",42)], [6, 31]), ([], [47]), ([], [45]), ([], [49]), ([], [50]), ([(#"(",#"(",144),
(#"0",#"9",143)], []), ([(#"0",#"9",145)], []), ([(#")",#")",146),
(#"0",#"9",145)], []), ([], [2]), ([(#".",#".",154)], []), ([(#".",#".",153)], []), ([(#".",#".",152)], []), ([(#".",#".",151)], []), ([], [37]), ([], [35]), ([], [34]), ([], [36]), ([], [33]), ([], [32]), ([], [29])]
    fun mk yyins = let
        (* current start state *)
        val yyss = ref INITIAL
	fun YYBEGIN ss = (yyss := ss)
	(* current input stream *)
        val yystrm = ref yyins
	(* get one char of input *)
	val yygetc = yyInput.getc
	(* create yytext *)
	fun yymktext(strm) = yyInput.subtract (strm, !yystrm)
        open UserDeclarations
        fun lex 
(yyarg as ()) = let 
     fun continue() = let
            val yylastwasn = yyInput.lastWasNL (!yystrm)
            fun yystuck (yyNO_MATCH) = raise Fail "stuck state"
	      | yystuck (yyMATCH (strm, action, old)) = 
		  action (strm, old)
	    val yypos = yyInput.getpos (!yystrm)
	    val yygetlineNo = yyInput.getlineNo
	    fun yyactsToMatches (strm, [],	  oldMatches) = oldMatches
	      | yyactsToMatches (strm, act::acts, oldMatches) = 
		  yyMATCH (strm, act, yyactsToMatches (strm, acts, oldMatches))
	    fun yygo actTable = 
		(fn (~1, _, oldMatches) => yystuck oldMatches
		  | (curState, strm, oldMatches) => let
		      val (transitions, finals') = Vector.sub (yytable, curState)
		      val finals = List.map (fn i => Vector.sub (actTable, i)) finals'
		      fun tryfinal() = 
		            yystuck (yyactsToMatches (strm, finals, oldMatches))
		      fun find (c, []) = NONE
			| find (c, (c1, c2, s)::ts) = 
		            if c1 <= c andalso c <= c2 then SOME s
			    else find (c, ts)
		      in case yygetc strm
			  of SOME(c, strm') => 
			       (case find (c, transitions)
				 of NONE => tryfinal()
				  | SOME n => 
				      yygo actTable
					(n, strm', 
					 yyactsToMatches (strm, finals, oldMatches)))
			   | NONE => tryfinal()
		      end)
	    in 
let
fun yyAction0 (strm, lastMatch : yymatch) = (yystrm := strm;
      (pos := !pos + 1; lex()))
fun yyAction1 (strm, lastMatch : yymatch) = (yystrm := strm; (lex()))
fun yyAction2 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm;
        (Tokens.NUMRAT((ExpOp.fromDecimal(yytext)), !pos, !pos))
      end
fun yyAction3 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (Tokens.NUMINT ((BigInt.toBigint(yytext)), !pos, !pos))
      end
fun yyAction4 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RATIONALDEC(!pos,!pos)))
fun yyAction5 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.INTEGERDEC(!pos,!pos)))
fun yyAction6 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.BOOLEANDEC(!pos,!pos)))
fun yyAction7 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.TRUE(!pos,!pos)))
fun yyAction8 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.FALSE(!pos,!pos)))
fun yyAction9 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.VARDEC(!pos,!pos)))
fun yyAction10 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.IF(!pos,!pos)))
fun yyAction11 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.THEN(!pos,!pos)))
fun yyAction12 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.ELSE(!pos,!pos)))
fun yyAction13 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.FI(!pos,!pos)))
fun yyAction14 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.WHILE(!pos,!pos)))
fun yyAction15 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.DO(!pos,!pos)))
fun yyAction16 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.OD(!pos,!pos)))
fun yyAction17 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.PROCEDURE(!pos,!pos)))
fun yyAction18 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.PRINT(!pos,!pos)))
fun yyAction19 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.READ(!pos,!pos)))
fun yyAction20 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.CALL(!pos,!pos)))
fun yyAction21 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.INVERSE(!pos,!pos)))
fun yyAction22 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.MAKERAT(!pos,!pos)))
fun yyAction23 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RAT(!pos,!pos)))
fun yyAction24 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.SHOWRAT(!pos,!pos)))
fun yyAction25 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.SHOWDECIMAL(!pos,!pos)))
fun yyAction26 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.FROMDECIMAL(!pos,!pos)))
fun yyAction27 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.TODECIMAL(!pos,!pos)))
fun yyAction28 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.NOT(!pos,!pos)))
fun yyAction29 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.AND(!pos,!pos)))
fun yyAction30 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.OR(!pos,!pos)))
fun yyAction31 (strm, lastMatch : yymatch) = let
      val yytext = yymktext(strm)
      in
        yystrm := strm; (Tokens.ID(yytext,!pos,!pos))
      end
fun yyAction32 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.LCOMMENT(!pos,!pos)))
fun yyAction33 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RCOMMENT(!pos,!pos)))
fun yyAction34 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RATPLUS(!pos,!pos)))
fun yyAction35 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RATSUB(!pos,!pos)))
fun yyAction36 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RATTIMES(!pos,!pos)))
fun yyAction37 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RATDIV(!pos,!pos)))
fun yyAction38 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.NEG(!pos,!pos)))
fun yyAction39 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.PLUS(!pos,!pos)))
fun yyAction40 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.SUB(!pos,!pos)))
fun yyAction41 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.TIMES(!pos,!pos)))
fun yyAction42 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.DIV(!pos,!pos)))
fun yyAction43 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.MOD(!pos,!pos)))
fun yyAction44 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.LT(!pos,!pos)))
fun yyAction45 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.LE(!pos,!pos)))
fun yyAction46 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.GT(!pos,!pos)))
fun yyAction47 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.GE(!pos,!pos)))
fun yyAction48 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.EQ(!pos,!pos)))
fun yyAction49 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.NE(!pos,!pos)))
fun yyAction50 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.ASSIGN(!pos,!pos)))
fun yyAction51 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.LPAREN(!pos,!pos)))
fun yyAction52 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RPAREN(!pos,!pos)))
fun yyAction53 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.LBRACE(!pos,!pos)))
fun yyAction54 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.RBRACE(!pos,!pos)))
fun yyAction55 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.SEMI(!pos,!pos)))
fun yyAction56 (strm, lastMatch : yymatch) = (yystrm := strm;
      (Tokens.COMMA(!pos,!pos)))
val yyactTable = Vector.fromList([yyAction0, yyAction1, yyAction2, yyAction3,
  yyAction4, yyAction5, yyAction6, yyAction7, yyAction8, yyAction9, yyAction10,
  yyAction11, yyAction12, yyAction13, yyAction14, yyAction15, yyAction16,
  yyAction17, yyAction18, yyAction19, yyAction20, yyAction21, yyAction22,
  yyAction23, yyAction24, yyAction25, yyAction26, yyAction27, yyAction28,
  yyAction29, yyAction30, yyAction31, yyAction32, yyAction33, yyAction34,
  yyAction35, yyAction36, yyAction37, yyAction38, yyAction39, yyAction40,
  yyAction41, yyAction42, yyAction43, yyAction44, yyAction45, yyAction46,
  yyAction47, yyAction48, yyAction49, yyAction50, yyAction51, yyAction52,
  yyAction53, yyAction54, yyAction55, yyAction56])
in
  if yyInput.eof(!(yystrm))
    then UserDeclarations.eof(yyarg)
    else (case (!(yyss))
       of INITIAL => yygo yyactTable (0, !(yystrm), yyNO_MATCH)
      (* end case *))
end
            end
	  in 
            continue() 	  
	    handle IO.Io{cause, ...} => raise cause
          end
        in 
          lex 
        end
    in
    fun makeLexer yyinputN = mk (yyInput.mkStream yyinputN)
    fun makeLexer' ins = mk (yyInput.mkStream ins)
    end

  end
